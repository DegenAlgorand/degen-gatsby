{"version":3,"file":"component---src-pages-index-tsx-e8594fb30ca0101edfe8.js","mappings":"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","sources":["webpack://degen-gatsby/./node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js","webpack://degen-gatsby/./src/components/hero-sections/buildingCommunity.tsx","webpack://degen-gatsby/./src/pages/index.tsx"],"sourcesContent":["import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nfunction useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n\n  var _React$useState = React.useState(queries.map(function (query) {\n    return isSupported ? !!env.window.matchMedia(query).matches : false;\n  })),\n      matches = _React$useState[0],\n      setMatches = _React$useState[1]; // Specifying matches in the dependency list will cause the event listeners\n  // to unload and then load each time the dependency changes. This causes\n  // Media Query Events to be missed. The event listeners should only be unloaded\n  // when the component unloads.\n\n\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function (_, index) {\n      var listener = function listener(mqlEvent) {\n        var queryIndex = mediaQueryList.findIndex(function (mediaQuery) {\n          return mediaQuery.media === mqlEvent.media;\n        }); // As the event listener is on the media query list, any time the\n        // listener is called, we know there is a change. There's no need\n        // to compare the previous matches with current. Using\n        // setMatches(matches => {...}) provides access to the current matches\n        // state.  Trying to access matches outside the setMatches function\n        // would provide data from the the time of instantiation (stale).\n\n        setMatches(function (matches) {\n          var currentMatches = matches.map(function (x) {\n            return x;\n          });\n          currentMatches[queryIndex] = mqlEvent.matches;\n          return currentMatches;\n        });\n      }; // Listening to the 'change' event on the Media Query List Object\n      // is more performant as the callback is only invoked when a specified\n      // media query is matched. Using addEventListener on the window object\n      // to listen for the resize event will call the callback on every\n      // viewport resize.\n\n\n      if (typeof mediaQueryList[index].addEventListener === \"function\") {\n        mediaQueryList[index].addEventListener(\"change\", listener);\n      } else {\n        mediaQueryList[index].addListener(listener);\n      }\n\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (_, index) {\n        if (typeof mediaQueryList[index].removeEventListener === \"function\") {\n          mediaQueryList[index].removeEventListener(\"change\", listenerList[index]);\n        } else {\n          mediaQueryList[index].removeListener(listenerList[index]);\n        }\n      });\n    };\n  }, []);\n  return matches;\n}\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\n\n\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n      hide = props.hide,\n      children = props.children;\n\n  var _useMediaQuery = useMediaQuery(breakpoint),\n      show = _useMediaQuery[0];\n\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\n\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\n\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\n\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\n\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\n\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n      below = props.below,\n      above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n\n  return query;\n}\n/**\n * React hook used to get the user's animation preference.\n */\n\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n      prefersReducedMotion = _useMediaQuery[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n      isLight = _useMediaQuery2[0],\n      isDark = _useMediaQuery2[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param defaultBreakpoint default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\n\n\nfunction useBreakpoint(defaultBreakpoint) {\n  var _useTheme = useTheme(),\n      __breakpoints = _useTheme.__breakpoints;\n\n  var env = useEnvironment();\n  var queries = React__default.useMemo(function () {\n    var _breakpoints$details;\n\n    return (_breakpoints$details = __breakpoints == null ? void 0 : __breakpoints.details.map(function (_ref) {\n      var minMaxQuery = _ref.minMaxQuery,\n          breakpoint = _ref.breakpoint;\n      return {\n        breakpoint: breakpoint,\n        query: minMaxQuery.replace(\"@media screen and \", \"\")\n      };\n    })) != null ? _breakpoints$details : [];\n  }, [__breakpoints]);\n\n  var _React$useState = React__default.useState(function () {\n    if (env.window.matchMedia) {\n      // set correct breakpoint on first render\n      var matchingBreakpointDetail = queries.find(function (_ref2) {\n        var query = _ref2.query;\n        return env.window.matchMedia(query).matches;\n      });\n      return matchingBreakpointDetail == null ? void 0 : matchingBreakpointDetail.breakpoint;\n    }\n\n    if (defaultBreakpoint) {\n      // use fallback if available\n      var fallbackBreakpointDetail = queries.find(function (_ref3) {\n        var breakpoint = _ref3.breakpoint;\n        return breakpoint === defaultBreakpoint;\n      });\n      return fallbackBreakpointDetail == null ? void 0 : fallbackBreakpointDetail.breakpoint;\n    }\n\n    return undefined;\n  }),\n      currentBreakpoint = _React$useState[0],\n      setCurrentBreakpoint = _React$useState[1];\n\n  React__default.useEffect(function () {\n    var allUnregisterFns = queries.map(function (_ref4) {\n      var breakpoint = _ref4.breakpoint,\n          query = _ref4.query;\n      var mediaQueryList = env.window.matchMedia(query);\n\n      if (mediaQueryList.matches) {\n        setCurrentBreakpoint(breakpoint);\n      }\n\n      var handleChange = function handleChange(ev) {\n        if (ev.matches) {\n          setCurrentBreakpoint(breakpoint);\n        }\n      }; // add media query listener\n\n\n      if (typeof mediaQueryList.addEventListener === \"function\") {\n        mediaQueryList.addEventListener(\"change\", handleChange);\n      } else {\n        mediaQueryList.addListener(handleChange);\n      } // return unregister fn\n\n\n      return function () {\n        if (typeof mediaQueryList.removeEventListener === \"function\") {\n          mediaQueryList.removeEventListener(\"change\", handleChange);\n        } else {\n          mediaQueryList.removeListener(handleChange);\n        }\n      };\n    });\n    return function () {\n      allUnregisterFns.forEach(function (unregister) {\n        return unregister();\n      });\n    };\n  }, [queries, __breakpoints, env.window]);\n  return currentBreakpoint;\n}\n\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n\n  return undefined;\n}\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param defaultBreakpoint default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var _theme$__breakpoints;\n\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the sorted breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Array.from(((_theme$__breakpoints = theme.__breakpoints) == null ? void 0 : _theme$__breakpoints.keys) || []);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };","import { Heading, Stack, Text, Button, Flex, Link, Hide, Badge } from '@chakra-ui/react';\nimport React from 'react';  \nimport DegenTokenLogo from '../logos/degenTokenLogo';\n\nconst BuildingCommunity = () => (\n  <Stack\n    align={'center'}\n    spacing={{ base: 8, md: 10 }}\n    py={{ base: 10, md: 28 }}\n    direction={{ base: 'column', md: 'row' }}>\n    <Stack flex={1} spacing={{ base: 5, md: 10 }}>\n      <Heading\n        lineHeight={1.1}\n        fontWeight={600}\n        fontSize={{ base: '4xl', sm: '4xl', lg: '6xl' }}>\n        <Text\n          as={'span'}\n          position={'relative'}\n          _after={{\n            content: \"''\",\n            width: 'full',\n            height: '2%',\n            position: 'absolute',\n            bottom: 1,\n            left: 0,\n            bg: 'purple.400',\n          }}>\n          Decentralized Community on Algorand.\n        </Text>\n        <br />\n        <Text as={'span'}>\n        </Text>\n      </Heading>\n      <Text color={'gray.500'}>\n      100% of Degen initially went into the Tinyman liquidity pool and no \n      Degen was withheld for the team. In fact, there is no predetermined 'team', \n      Degen token holders will have a say in determining the direction of Degen. \n      We are bootstrapping a community, Degen Token is our governance token.\n      </Text>\n      <Stack\n        spacing={{ base: 4, sm: 6 }}\n        direction={{ base: 'column', sm: 'row' }}>\n        <Link href='https://discord.gg/yfzG2NX4Vz' _hover={{ textDecoration: 'none' }}>\n          <Button\n            size={'lg'}\n            fontWeight={'normal'}\n            px={6}\n            colorScheme={'purple'}\n            bg={'purple.400'}\n            _hover={{ bg: 'purple.500' }}\n            w={['100%']}>\n            Join Discord\n          </Button>\n        </Link>\n        <Stack>\n          <Link href='https://app.pact.fi/swap?pair=ALGO0/DEGEN+TOKEN417708610(100)' _hover={{ textDecoration: 'none' }}>\n            <Button\n              size={'lg'}\n              fontWeight={'normal'}\n              px={6}\n              colorScheme={'purple'}\n              bg={'green.400'}\n              _hover={{ bg: 'green.500' }}\n              w={['100%']}>\n              Buy on PactFi\n            </Button>\n          </Link>\n          <Badge border={'1px'} w={'112px'} colorScheme='orange'>Aeneas Rewards</Badge>\n          <Link href='/blog/pactfi-aeneas-rewards-degen/'>\n            <Text fontSize={'sm'}>Receive Aeneas Rewards for providing liquidity on the Degen / Algo 1% Pool</Text>\n          </Link>\n        </Stack>\n        \n        \n      </Stack>\n    </Stack>\n    <Hide below={'md'}>\n      <Flex\n        flex={1}\n        justify={'center'}\n        align={'center'}\n        position={'relative'}\n        w={'full'}>\n          <DegenTokenLogo size={300} />\n      </Flex>\n    </Hide>\n  </Stack>\n)\n\nexport default BuildingCommunity;\n","import * as React from \"react\"\nimport Layout from \"../layout\";\nimport BuildingCommunity from \"../components/hero-sections/buildingCommunity\";\n\n// markup\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <BuildingCommunity />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"names":["useSafeLayoutEffect","useMediaQuery","query","env","queries","Array","isArray","isSupported","window","_React$useState","map","matchMedia","matches","setMatches","mediaQueryList","listenerList","_","index","listener","mqlEvent","queryIndex","findIndex","mediaQuery","media","currentMatches","x","addEventListener","addListener","forEach","removeEventListener","removeListener","Visibility","props","breakpoint","hide","children","show","Hide","useQuery","displayName","getBreakpoint","theme","value","_props$breakpoint","below","above","bpBelow","bpAbove","align","spacing","base","md","py","direction","flex","lineHeight","fontWeight","fontSize","sm","lg","as","position","_after","content","width","height","bottom","left","bg","color","href","_hover","textDecoration","size","px","colorScheme","w","border","justify"],"sourceRoot":""}